<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	mapper 파일은 특정 테이블에 대한 SQL 구문을 보관하는 파일이다
	- myBatis를 이용하는 개발자는 이곳에 저장된 SQL 구문을 "아이디"를 이용해서 호출한다
	- 파일마다 동일한 아이디로 인해 발생하는 충돌을 방지하기 위해 고유한 namespace를 사용한다 
	- 만약 namespace가 olympic이고 구문 ID가 list라면 외부에서는 olympic.list로 호출한다
	- 일반적으로 namespace는 테이블명으로 한다!
	- mapper 내부에는 다음 종류 태그로 구문을 저장할 수 있다.
		- <insert>
		- <select>
		- <update>
		- <delete>
	- 각 구문은 반드시 아이디를 가져야 한다.
	- 각 구문에는 다음과 같은 속성을 작성할 수 잇다.
		- parameterType : 해당 구문이 실행되기 위해 필요한 데이터의 자료형
 		- resultType : 해당 구문의 실행 겨롸를 변환하기 위한 자료형(1개만 작성가능, 필수)
 			- (주의) : List이든 아니든 DTO의 형태로 작성한다(모르는 부분을 알려준다.)
 	- 각 구문에 데이터를 다음과 같이 바인딩할 수 있다.
 		- 동적 바인딩 : #{이름} 형태로 작성하면 자동으로 자로형에 맞게 해당 데이터를 추출하여 작성해준다.
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<insert id="join" parameterType="MemberDto">
		insert into member (
			member_id,member_pw,member_name,
			member_nick,member_phone,member_email,
			member_birth,member_gender,member_local
		)
		values(
			#{memberId},#{memberPw},#{memberName},
			#{memberNick},#{memberPhone},#{memberEmail},
			#{memberBirth},#{memberGender},#{memberLocal}
		)
	</insert>
	
	<select id="one" parameterType="String" resultType="MemberDto">
		select * from member
		where
			member_id = #{memberId}
	</select>
	
	<update id="changeInfo" parameterType="MemberDto">
		update member
		set
			member_name = #{memberName}, member_nick = #{memberNick}, member_phone = #{memberPhone},
			member_email = #{memberEmail},member_birth = #{memberBirth},member_gender = #{memberGender}
			,member_local = #{memberLocal}
		where
			member_id = #{memberId}
	</update>
	
	<update id="changePw" parameterType="MemberDto">
		update member
		set
			member_pw = #{memberPw}
		where
			member_id = #{memberId}
	</update>
	
	<update id="updateLogin" parameterType="String">
		update member
		set 
			member_logindate = sysdate
		where
			member_id = #{memberId}
	</update>
	
	<delete id="exit" parameterType="String">
		delete member
		where 
			member_id = #{memberId}
	</delete>
	
	<select id="findId" resultType="MemberDto" parameterType="MemberDto">
		select member_id from member
		where
			member_nick = #{memberNick}
		and
			member_phone = #{memberPhone}
		and
			member_birth = #{memberBirth}
	</select>
	
	<select id="findPw" resultType="MemberDto" parameterType="MemberDto">
		select * from member
		where
			member_id = #{memberId}
		and
			member_nick = #{memberNick}
		and
			member_phone = #{memberPhone}
		and
			member_birth = #{memberBirth}
	</select>
	
	<select id="selectNick" resultType="MemberDto" parameterType="String">
		select * from member
		where member_nick = #{memberNick}
	</select>
	
	<select id="selectPhone" resultType="MemberDto" parameterType="String">
		select * from member
		where member_phone = #{memberPhone}
	</select>
</mapper> 