<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	mapper 파일은 특정 테이블에 대한 SQL 구문을 보관하는 파일이다
	- myBatis를 이용하는 개발자는 이곳에 저장된 SQL 구문을 "아이디"를 이용해서 호출한다
	- 파일마다 동일한 아이디로 인해 발생하는 충돌을 방지하기 위해 고유한 namespace를 사용한다 
	- 만약 namespace가 olympic이고 구문 ID가 list라면 외부에서는 olympic.list로 호출한다
	- 일반적으로 namespace는 테이블명으로 한다!
	- mapper 내부에는 다음 종류 태그로 구문을 저장할 수 있다.
		- <insert>
		- <select>
		- <update>
		- <delete>
	- 각 구문은 반드시 아이디를 가져야 한다.
	- 각 구문에는 다음과 같은 속성을 작성할 수 있다
		- parameterType : 해당 구문이 실행되기 위해 필요한 데이터의 자료형(1개만 작성 가능, 선택)
		- resultType : 해당 구문의 실행 결과를 변환하기 위한 자료형(1개만 작성 가능, 필수)
			- (주의) List이든 아니든 DTO의 형태를 작성한다(모르는 부분을 알려준다)
	- 각 구문에는 데이터를 다음과 같이 바인딩할 수 있다
		- 정적 바인딩 : ${이름} 형태로 작성하면 어떠한 추가 작업도 없이 해당 위치에 데이터가 그대로 작성된다
		- 동적 바인딩 : #{이름} 형태로 작성하면 자동으로 자료형에 맞게 해당 데이터를 추출하여 작성해준다(DTO 변수명)
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="packageReserve">
	
	<select id="sequence" resultType="int">
		select package_reserve_no_seq.nextval from dual
	</select>
	
		<insert id="reserve" parameterType="PackageReserveDto">
		insert into package_reserve(
		package_booking_no,  package_no, member_id, package_total_price, package_status,
		package_reserve_time, package_depart
		)
		values(
		#{packageBookingNo}, #{packageNo},#{memberId},#{packageTotalPrice}, '예약완료', sysdate,#{packageDepart}
		)
	</insert>						
	
		<!-- 선결제 -->
		<insert id="reservePay" parameterType="PackageReserveDto">
		insert into package_reserve(
		package_booking_no,  package_no, member_id, package_total_price, package_status,
		package_reserve_time, package_depart
		)
		values(
		#{packageBookingNo}, #{packageNo},#{memberId},#{packageTotalPrice}, '결제완료', sysdate,TO_DATE(#{packageDepart}, 'YYYY-MM-DD')
		)
	</insert>					
	
		<!-- 패키지예약완료 번호 검색 -->
	<select id="one" resultType="PackageReserveDto" parameterType="int">
		select *
		from package_reserve where package_booking_no= #{packageBookingNo}
	</select>		
	
		<!-- result map  생성 -->
	 <resultMap type="PackageReserveVO"  id="packageReserveMap">
	 	<result column="field_no" property="fieldNo"/>
	 	<result column="package_total_price" property="packageTotalPrice"/>
	 	<result column="member_id" property="memberId"/>
	 	<result column="package_depart" property="packageDepart"/>
	 	<result column="package_reserve_time" property="packageReserveTime"/>
	 	<result column="package_status" property="packageStatus"/>
	 	<result column="package_no" property="packageNo"/>
	  <result column="stay_name" property="stayName"/>
	 	<result column="field_name" property="fieldName"/>
	 <result column="package_booking_no" property="packageBookingNo"/>
	</resultMap>
	
		<!--패키지 리스트 -->
		<select id="reserveList" resultMap="packageReserveMap" parameterType="String" >
		select P.field_no
                 , R.package_total_price
                 , R.member_id
                 , R.package_reserve_time
                 , R.package_status
                 , R.package_no
                 , S.stay_name
                 , F.field_name
                 , R.package_depart
                 , R.package_booking_no
		from stay S
			left outer join package_booking P on S.stay_no = P.stay_no
			left outer join  golf_field F on F.field_no = P.field_no
			left outer join  package_reserve R on R.package_no = P.package_no
       	 where R.package_booking_no is not null and
       	  R.member_id= #{memberId} order by R.package_booking_no desc
	</select>
	
	<!-- 취소 -->
	<update id="cancel" parameterType="int">
		update package_reserve set  package_status='예약취소' where package_booking_no= #{packageBookingNo}
	</update>
	
		<!-- 선결제 취소 -->
	<update id="cancelPay" parameterType="int">
		update package_reserve set  package_status='결제취소' where package_booking_no= #{packageBookingNo}
	</update>


	<insert id="payInsert" parameterType="Map">
		insert into package_payment values(#{pacakgeBookingNo},#{paymentNo})
	</insert>				
	
	   <update id="dateUpdate" parameterType="int">
		update package_reserve set  package_depart=#{packageDepart} 
		</update>
	
	<!-- 투어 예약현황 -->
	<select id="reserveConfirm" parameterType="PackageReserveDto" resultType="int">
	SELECT COUNT(*) FROM PACKAGE_RESERVE WHERE TO_CHAR(PACKAGE_DEPART, 'YYYY-MM-DD') = #{packageDepart}
	</select>
	
</mapper>
