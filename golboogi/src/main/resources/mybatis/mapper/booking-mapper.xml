<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	mapper 파일은 특정 테이블에 대한 SQL 구문을 보관하는 파일이다
	- myBatis를 이용하는 개발자는 이곳에 저장된 SQL 구문을 "아이디"를 이용해서 호출한다
	- 파일마다 동일한 아이디로 인해 발생하는 충돌을 방지하기 위해 고유한 namespace를 사용한다 
	- 만약 namespace가 olympic이고 구문 ID가 list라면 외부에서는 olympic.list로 호출한다
	- 일반적으로 namespace는 테이블명으로 한다!
	- mapper 내부에는 다음 종류 태그로 구문을 저장할 수 있다.
		- <insert>
		- <select>
		- <update>
		- <delete>
	- 각 구문은 반드시 아이디를 가져야 한다.
	- 각 구문에는 다음과 같은 속성을 작성할 수 있다
		- parameterType : 해당 구문이 실행되기 위해 필요한 데이터의 자료형(1개만 작성 가능, 선택)
		- resultType : 해당 구문의 실행 결과를 변환하기 위한 자료형(1개만 작성 가능, 필수)
			- (주의) List이든 아니든 DTO의 형태를 작성한다(모르는 부분을 알려준다)
	- 각 구문에는 데이터를 다음과 같이 바인딩할 수 있다
		- 정적 바인딩 : ${이름} 형태로 작성하면 어떠한 추가 작업도 없이 해당 위치에 데이터가 그대로 작성된다
		- 동적 바인딩 : #{이름} 형태로 작성하면 자동으로 자료형에 맞게 해당 데이터를 추출하여 작성해준다(DTO 변수명)
 -->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="booking">
	
	<select id="sequence" resultType="int">
		select booking_seq.nextval from dual
	</select>

	<insert id="insert" parameterType="BookingDto">
		insert into booking(booking_no,member_id,tee_time_no,tee_time_d,booking_name,booking_price,booking_status,booking_drop_able)
		values(#{bookingNo},#{memberId},#{teeTimeNo},to_date(#{teeTimeD},'YYYY-MM-DD'),#{bookingName},#{bookingPrice},'예약완료',to_date(#{teeTimeD},'YYYY-MM-DD')-7)
	</insert>	
	

	<insert id="payInsert" parameterType="BookingDto">
		insert into booking(booking_no,member_id,tee_time_no,tee_time_d,booking_name,booking_price,booking_status,booking_drop_able)
		values(#{bookingNo},#{memberId},#{teeTimeNo},to_date(#{teeTimeD},'YYYY-MM-DD'),#{bookingName},#{bookingPrice},'결제완료',to_date(#{teeTimeD},'YYYY-MM-DD')-7)
	</insert>	
	
	<select id="check" parameterType="Map" resultType="BookingDto">
		select * from booking where tee_time_no=#{teeTimeNo} and tee_time_d=#{teeTimeD} and booking_status='예약완료'
	</select>	

	<select id="myBookingList" parameterType="String" resultType="MyBookingListVO">
		select member_id,field_name,tee_time_d,tee_time_t,course_name,course_hole,
		booking_price,booking_status,booking_drop_able,booking_no,field_prepay,G.field_no, attachment_no from
    booking B 
        inner join tee_time T on B.tee_time_no = T.tee_time_no
        inner join golf_course C on T.course_no = C.course_no
        inner join golf_field G on G.field_no = C.field_no  
        left outer join
		(select f.field_no, min(A.attachment_no) as attachment_no from golf_field F
		left outer join 
		        golf_profile A on F.field_no = A.field_no
		        group by f.field_no
		) A on G.field_no = A.field_no  where member_id= #{memberId}      
        order by booking_no desc
	</select>

	<select id="myBookingInfo" parameterType="int" resultType="MyBookingListVO">
		select member_id,field_name,tee_time_d,tee_time_t,course_name,course_hole,
		booking_price,booking_status,booking_drop_able,booking_no,field_prepay,
		field_cartfee,field_caddiefee,booking_date,G.field_no,attachment_no from
    booking B 
        inner join tee_time T on B.tee_time_no = T.tee_time_no
        inner join golf_course C on T.course_no = C.course_no
        inner join golf_field G on G.field_no = C.field_no 
        left outer join
		(select f.field_no, min(A.attachment_no) as attachment_no from golf_field F
		left outer join 
		        golf_profile A on F.field_no = A.field_no
		        group by f.field_no
		) A on G.field_no = A.field_no where booking_no=#{bookingNo}
	</select>
	
	<update id="cancel" parameterType="int">
		update booking set booking_status='예약취소',booking_people=null where booking_no = #{bookingNo} 
	</update>
									
	<select id="reservation" parameterType="String" resultType="BookingDto">
		select * from booking where member_id = #{memberId}
		order by booking_no desc
	</select>
								

	<select id="info" parameterType="int" resultType="BookingDto">
		select * from booking where booking_no = #{bookingNo}
	</select>		
	
	<update id="updateBookingPeople" parameterType="int">
		update booking set booking_people=4 where tee_time_no =#{teeTimeNo}
	</update>	
	
	<insert id="paymentInsert" parameterType="Map">
		insert into booking_payment values(#{bookingNo},#{paymentNo})
	</insert>				
</mapper> 







